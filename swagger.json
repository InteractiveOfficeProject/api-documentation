{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation of the Interactive Office project.",
        "version": "0.0.1",
        "title": "Interactive Office API"
    },
    "host": "petstore.swagger.io",
    "basePath": "/v2", 
    "schemes": [
        "http"
    ],
    "paths": {},
    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "required": [
                "UserID",
                "FirstName",
                "LastName"
            ],
            "properties": {
                "UserID": {
                    "type": "integer",
                    "format": "int64"
                },
                "Email": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "ProfilePictureURL": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Activity": {
            "type": "object",
            "required": [
                "ActivityID",
                "Name"
            ],
            "properties": {
                "ActivityID": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "MaximumUsers": {
                    "type": "int64",
                    "default": 0,
                    "description": "The number of maximum users that are allowed for this activity. 0 means that unlimited users can be matched up at the same time for this activity."
                }
            },
            "xml": {
                "name": "Activity"
            }
        },
        "Room": {
            "type": "object",
            "required": [
                "RoomID",
                "Name"
            ],
            "properties": {
                "RoomID": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "MaximumUsers": {
                    "type": "int64",
                    "default": 0,
                    "description": "The number of maximum users that are allowed for this activity. 0 means that unlimited users can be matched up at the same time for this activity."
                }
            },
            "xml": {
                "name": "Room"
            }
        },
        "Break": {
            "type": "object",
            "description": "The break object which gets created once a user signs up for a break",
            "required": [
                "BreakID",
                "User",
                "Activities",
                "Status"
            ],
            "properties": {
                "BreakID": {
                    "type": "integer",
                    "format": "int64"
                },
                "User": {
                    "$ref": "#/definitions/Activity",
                    "description": "The ID of the user who is currently in the queue"
                },
                "Joined": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime value when the user has joined the queue"
                },
                "Activities": {
                    "type": "array",
                    "description": "The array of ActivityIDs the user has signed up for",
                    "items": {
                        "$ref": "#/definitions/Activity"
                    }
                },
                "Status": {
                    "type": "string",
                    "description": "The status of the break",
                    "enum": [
                        "waiting",
                        "inprogress",
                        "waitingforfeedback",
                        "complete",
                        "cancelled"
                    ],
                    "default": "waiting"
                }
            },
            "xml": {
                "name": "Break"
            }
        },
        "Feedback": {
            "type": "object",
            "required": [
                "FeedbackID",
                "User",
                "Partners",
                "Activity",
                "Feedback"
            ],
            "properties": {
                "FeedbackID": {
                    "type": "integer",
                    "format": "int64"
                },
                "User": {
                    "$ref": "#/definitions/User"
                },
                "Partners": {
                    "type": "array",
                    "description": "The array of users whom the user had the break with",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "Activity": {
                    "$ref": "#/definitions/Activity"
                },
                "Room": {
                    "$ref": "#/definitions/Room"
                },
                "Feedback": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Feedback"
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}